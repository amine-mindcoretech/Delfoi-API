const express = require('express');
const { fetchAndStoreAllWrikeComments, updateRecentWrikeComments } = require('../controllers/wrikeCommentsController');
const notifyByEmail = require('../utils/sendErrorEmail');

const router = express.Router();

// üöÄ Route pour r√©cup√©rer **tous** les commentaires Wrike (chargement initial)
router.get('/fetchAllWrikeComments', async (req, res) => {
    try {
        await fetchAndStoreAllWrikeComments();
        res.status(200).json({ message: "Tous les commentaires Wrike enregistr√©s avec succ√®s." });
    } catch (error) {
        await notifyByEmail(
            '‚ùå √âchec r√©cup√©ration compl√®te des commentaires Wrike',
            `Une erreur est survenue dans /fetchAllWrikeComments : ${error.message}`
        );
        res.status(500).json({ error: "‚ùå Erreur lors de la r√©cup√©ration des commentaires Wrike." });
    }
});

// üîÑ Route pour mettre √† jour **les commentaires des 3 derniers jours**
router.get('/FetchWrikeComments', async (req, res) => {
    try {
        await updateRecentWrikeComments();
        res.status(200).json({ message: "Mise √† jour des commentaires Wrike effectu√©e avec succ√®s." });
    } catch (error) {
        await notifyByEmail(
            '‚ùå √âchec mise √† jour des commentaires Wrike',
            `Une erreur est survenue dans /FetchWrikeComments : ${error.message}`
        );
        res.status(500).json({ error: "‚ùå Erreur lors de la mise √† jour des commentaires Wrike." });
    }
});

module.exports = router;
